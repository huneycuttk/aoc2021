indirect enum SnailfishNumber {
    case number(Int)
    case pair(SnailfishNumber, SnailfishNumber)
    
    var depth: Int {
        get {
            switch(self) {
            case .number:
                return 0
            case let .pair(left, right):
                return [ left.depth, right.depth ].max()!
            }
        }
    }
    
    var magnitude: Int {
        get {
            switch (self) {
            case let .number(value):
                return value
            case let .pair(left, right):
                return 3*left.magnitude + 2*right.magnitude
            }
        }
    }
    
    static func +(left: SnailfishNumber, right: SnailfishNumber) -> SnailfishNumber {
        return .pair(left, right)
    }
}
